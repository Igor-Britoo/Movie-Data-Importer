import csv
import os
from dotenv import load_dotenv
from cassandra.cluster import Cluster
from cassandra.auth import PlainTextAuthProvider

# Load Client ID, Secret and Secure Connect Bundle from .env
load_dotenv()
CLIENT_ID = os.environ.get('CLIENT_ID')
CLIENT_SECRET = os.environ.get('CLIENT_SECRET')
SECURE_CONNECT_BUNDLE = os.environ.get('SECURE_CONNECT_BUNDLE')

# This secure connect bundle is autogenerated when you download your SCB, 
# if yours is different update the file name below
cloud_config= {
  'secure_connect_bundle': SECURE_CONNECT_BUNDLE
}

auth_provider = PlainTextAuthProvider(CLIENT_ID, CLIENT_SECRET)
cluster = Cluster(cloud=cloud_config, auth_provider=auth_provider)
session = cluster.connect()

session.set_keyspace('movies_keyspace')

# Read and process CSV file
csv_file_path = './movie_metadata.csv'

with open(csv_file_path, newline='', encoding='utf-8') as csvfile:
  reader = csv.DictReader(csvfile)
      
  for row in reader:
    # Extract and verify data, using None for missing values
    director_name = row['director_name'] if row['director_name'] else None
    title_year = int(row['title_year']) if row['title_year'] else None
    movie_title = row['movie_title'] if row['movie_title'] else None
    language = row['language'] if row['language'] else None
    color = row['color'] if row['color'] else None
    num_critic_for_reviews = int(row['num_critic_for_reviews']) if row['num_critic_for_reviews'] else None
    duration = int(row['duration']) if row['duration'] else None
    director_facebook_likes = int(row['director_facebook_likes']) if row['director_facebook_likes'] else None
    actor_3_facebook_likes = int(row['actor_3_facebook_likes']) if row['actor_3_facebook_likes'] else None
    actor_2_name = row['actor_2_name'] if row['actor_2_name'] else None
    actor_1_facebook_likes = int(row['actor_1_facebook_likes']) if row['actor_1_facebook_likes'] else None
    gross = int(row['gross']) if row['gross'] else None
    genres = row['genres'] if row['genres'] else None
    actor_1_name = row['actor_1_name'] if row['actor_1_name'] else None
    num_voted_users = int(row['num_voted_users']) if row['num_voted_users'] else None
    cast_total_facebook_likes = int(row['cast_total_facebook_likes']) if row['cast_total_facebook_likes'] else None
    actor_3_name = row['actor_3_name'] if row['actor_3_name'] else None
    facenumber_in_poster = int(row['facenumber_in_poster']) if row['facenumber_in_poster'] else None
    plot_keywords = row['plot_keywords'] if row['plot_keywords'] else None
    movie_imdb_link = row['movie_imdb_link'] if row['movie_imdb_link'] else None
    num_user_for_reviews = int(row['num_user_for_reviews']) if row['num_user_for_reviews'] else None
    country = row['country'] if row['country'] else None
    content_rating = row['content_rating'] if row['content_rating'] else None
    budget = int(row['budget']) if row['budget'] else None
    actor_2_facebook_likes = int(row['actor_2_facebook_likes']) if row['actor_2_facebook_likes'] else None
    imdb_score = float(row['imdb_score']) if row['imdb_score'] else None
    aspect_ratio = float(row['aspect_ratio']) if row['aspect_ratio'] else None
    movie_facebook_likes = int(row['movie_facebook_likes']) if row['movie_facebook_likes'] else None

    try:
      # Insert data into movies
      session.execute("""
        INSERT INTO movies (director_name, title_year, movie_title, language, color, num_critic_for_reviews, duration, director_facebook_likes, actor_3_facebook_likes, actor_2_name, actor_1_facebook_likes, gross, genres, actor_1_name, num_voted_users, cast_total_facebook_likes, actor_3_name, facenumber_in_poster, plot_keywords, movie_imdb_link, num_user_for_reviews, country, content_rating, budget, actor_2_facebook_likes, imdb_score, aspect_ratio, movie_facebook_likes)
        VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
      """, (
        director_name, title_year, movie_title, language, color, num_critic_for_reviews, duration, director_facebook_likes, actor_3_facebook_likes, actor_2_name,
        actor_1_facebook_likes, gross, genres, actor_1_name, num_voted_users, cast_total_facebook_likes, actor_3_name, facenumber_in_poster, plot_keywords,
        movie_imdb_link, num_user_for_reviews, country, content_rating, budget, actor_2_facebook_likes, imdb_score, aspect_ratio, movie_facebook_likes
      ))

      print(f'({movie_title} | {director_name}) - (OK)')
    
    except Exception as e:
      print(f"Error inserting row: {e}")

print("Data inserted successfully")
